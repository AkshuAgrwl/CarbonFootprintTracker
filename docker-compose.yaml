version: '3'
services:
  frontend:
    container_name: Frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - BackendBridge
    ports:
      - "3000:3000"
    volumes:
      - type: volume
        source: FrontendNodeModulesVolume
        target: /app/frontend/node_modules
    depends_on:
      backend:
        condition: service_healthy
        restart: true
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl -f http://localhost:3000 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
  backend:
    container_name: Backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - BackendBridge
      - DatabaseBridge
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
  db:
    container_name: Database
    build:
      context: ./db
      dockerfile: Dockerfile
    networks:
      - DatabaseBridge
    volumes:
      - type: volume
        source: DatabaseVolume
        target: /data/postgres
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres}
      interval: 10s
      timeout: 3s
      retries: 5
networks:
  BackendBridge:
    driver: bridge
  DatabaseBridge:
    driver: bridge
volumes:
  FrontendNodeModulesVolume:
    driver: local
  DatabaseVolume:
    driver: local
